#+Title: How I Org
#+Author: Kristian Amlie & Nick Anderson
#+Subtitle: Northern.tech winter summit 2018
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="How to organize yourself">
#+REVEAL_HLEVEL: 2
#+REVEAL_PLUGINS: (notes highlight print-pdf)
#+REVEAL_POSTAMBLE: <p> Created by %a </p>
#+REVEAL_ROOT: reveal.js-3.6.0/
#+REVEAL_THEME: white
#+REVEAL_TRANS: slide 
#+OPTIONS: reveal_center:t reveal_progress:t reveal_history:nil reveal_control:t
#+OPTIONS: reveal_rolling_links:t reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: reveal_single_file:nil
#+OPTIONS: reveal_title_slide:"<h2>%t</h2><h3>%d</h3><h4>%s</h4>" 
#+OPTIONS: toc:nil tags:nil reveal_slide_number:c/t 
#+EXCLUDE_TAGS: noexport

* 30k foot view
- The master of time boxing
- Prioritization maestro
- The most disciplined man in the world
 
Kristian

* Tooling
:PROPERTIES:
:ID:       175015ae-14e0-4545-9d7c-3308d0a8f55f
:Attachments: 6163066070_c71b223d09_b_d_2018-02-23_12-24-00.jpg
:END:

#+DOWNLOADED: https://farm7.staticflickr.com/6180/6163066070_c71b223d09_b_d.jpg @ 2018-02-23 12:24:00
#+ATTR_HTML: :width 100%
file:data/17/5015ae-14e0-4545-9d7c-3308d0a8f55f/6163066070_c71b223d09_b_d_2018-02-23_12-24-00.jpg

#+BEGIN_NOTES
  # +DOWNLOADED: https://farm7.staticflickr.com/6180/6163066070_c71b223d09_b_d.jpg @ 2018-02-23 12:24:00
  
  I spend the majority of my writing time inside of org-mode. I usually export
  my org formatted text to html, markdown, or jira.
  
  The center of my org is =refile.org=. This is where my org notes started when
  I first started playing with orgmode about 8 years ago when I first discovered
  org-mode and was reading [[http://doc.norang.ca/org-mode.html][Organize Your Life In Plain Text!]]
#+END_NOTES

** Spacemacs :ATTACH:
:PROPERTIES:
:ID:       9b0aa346-f8b4-4880-92bc-cd9886ce64fe
:Attachments: spacemacs-logo_2018-02-23_12-27-45.svg 687474703a2f2f7777772e6e61737333722e636f6d2f73706163656d6163732e706e67_2018-02-23_12-30-12.png
:END:


#+DOWNLOADED: https://raw.githubusercontent.com/nashamri/spacemacs-logo/master/spacemacs-logo.svg @ 2018-02-23 12:27:46
[[file:data/9b/0aa346-f8b4-4880-92bc-cd9886ce64fe/spacemacs-logo_2018-02-23_12-27-45.svg]]

#+BEGIN_NOTES
  I am a long time vim user and my muscle memory for modal editing is strong.
  The main reason I kept leaving orgmode was because I was uncomfortable inside
  emacs. Once I got evil working nicely in emacs org-mode became a central part
  of my workflow.
  
  I switched to spacemacs in 2016 which greatly simplified my emacs
  configuration and made integrating orgmode into more areas of my workflow.
#+END_NOTES

* Features
** Markup

#+ATTR_REVEAL: :frag (appear) 
- Similar to markdown
#+ATTR_REVEAL: :frag (appear) 
  - Slightly less readable (more options)

#+ATTR_REVEAL: :frag (appear) 
- Fair support rendering in github/gitlab

#+ATTR_REVEAL: :frag (appear) 
- TROLLING [[http://karl-voit.at/2017/09/23/orgmode-as-markup-only/][The most reasonable markup language for text]]?

*** Org Markup Example

#+BEGIN_EXAMPLE
  * Headings start with a star
  
  ** Subheadings start with 2 stars

  Text can be *bold*, /italic/, +struck through+ or =verbatim=.

  ,#+BEGIN_EXAMPLE
  You can have verbatim blocks
  ,#+END_EXAMPLE

  : This is another way to do verbatium blocks
  : I prefer the BEGIN/END style because of easy templates
  : <s, <e, <q
#+END_EXAMPLE
** GTD
*** Task Management
- Task status (=TODO=, =DONE=, =IN_PROGRESS=, =CATNIP=)
- Prioritization
*** Capturing

[[file:data/screencasts/NT-how-i-org-capture.webm][DEMO]]

#+BEGIN_NOTES
  - Quickly capture new work (Capture Templates)
  - Be as un-obtrusive as possible
  - Automatically clock time!
#+END_NOTES

*** Time Tracking
:LOGBOOK:
CLOCK: [2018-02-26 Mon 10:44]--[2018-02-26 Mon 10:46] =>  0:02
:END:
- ~org-clock-in~ :: Start the timer
- ~org-clock-out~ :: End the current timer
- ~org-clock-goto~ :: Jump to the current, or last timer
- =(setq org-clock-idle-time 15)= :: Helps to avoid dangling clocks.
- =(setq org-clock-continuously t)= :: Always clock in from the last clock.

*** Reporting clocked time
- ~org-clock-report~ :: Produce a report of clocked time

#+BEGIN_EXAMPLE
  ,#+BEGIN: clocktable :emphasize nil :scope subtree
  ,#+END: clocktable
#+END_EXAMPLE

#+CAPTION: Clock summary at [2018-02-26 Mon 10:47]
| Headline     | Time   |
|--------------+--------|
| *Total time* | *0:02* |
|--------------+--------|
*** Agenda

Find what your working on now, and what you might work on next

**** Agenda Example
#+BEGIN_EXAMPLE
**** DONE Develop feature
**** WIP Release feature
**** TODO Profit!
DEADLINE: <2018-03-08 Thu>
#+END_EXAMPLE

- TODO, WIP and DONE are keywords.
- One can set deadlines which will show up in the agenda
- Cycling states is easy with shortcuts

**** Agenda demo

[[file:data/screencasts/NT-how-i-org-agenda.webm][DEMO]]

*** Focusing
[[file:data/screencasts/NT-how-i-org-focus.webm][DEMO]]
- ~org-narrow-to-subtree~ :: Narrow the file buffer to the current subtree.
- ~org-tree-to-indirect-buffer~ :: Create a new isolated buffer with the current
     subtree. Allows for side-by-side editing in same file.

** Icing

The many other small things that converge to make an amazing environment.

** Keeping Secrets                                                   :crypt:
-----BEGIN PGP MESSAGE-----

hQIMA/jYNcPWXvJ6AQ/9E2T5YIwBQroKZCby/tW2zcQhP/orFInFlltJZZUhWiMN
ZHGE6tfoRl8CoARXXsQ5X33VLKN8sSuoCn4D95hE0aLLfSXSkNJ0LS1LjSp3z/pU
SFjg3RAYtrmdlr+0qTeLQdjxb8NVx+KunnniNmxUWjz5cD4h/QZO6kUm90vmNz9e
3erXTnYv/IVT7Wt5zWh6Q7ROhQVYUdxVxBvIDgrThpPJ2XICK1LRf22GjfcSQITO
Ld7D4IEx57KxhyTN2aAMjdzY11eUFDAoZW9Ihmc2ilb9fJTI5Unk9+PYkxXvFhbl
LBHRz75yBF1XXdOqVrJxGhNLnl2R2M/DWuHV2aQH3p97xDpd+heViFvrKBrIquMt
40c0Jqq6WMSQb+86q/nKCgrOut7g7biniwozdQr/Zrl6FIvtWcSKJOtT8ajvSn8u
9EuSu85lCBLpqdwNihoH03qBdyNA8apgtm7Vz24tyQBRcIQ+RUCMSa9kElUJbeIB
dgIu5/eumeWnPhBM9oix7BpsoREle4unmSoILk6zxouaBl0nO9/nBCH6kJwlZP/o
nJSh1xGWH9mN/4JPk12+VRSYP2+AGRAbY/UhbF5SkPco8gkxQrXvPMYhoGs+baNv
iiVpoBqO72lsuS2IqJAM1fZpaJ0uvyPPk2y8w6AcCuKFbxjmdkCh4k/pBkp7SMLS
SQF0hQdBzssXdoh3hzDnk4+m7iZk2jEGp1EIHDLJUWAk9LVzDovIwUBisDV045bZ
KH7Pb94xkOhGhjeVeUUKV62qra8x7xFD/xw=
=kEdQ
-----END PGP MESSAGE-----

** Keeping Secrets
- That was =org-crypt=, I simply tagged the header with the =crypt= tag.
- Specify the whole file using a "file variable" header.
  #+BEGIN_EXAMPLE
    # -*- epa-file-encrypt-to: ("9274E588E866A10B713C9CCD9EB3AD425D1CCC11", "3427A17A5C1A9F1C07D7C4BFF464407C996AF03F") -*-
  #+END_EXAMPLE 
- Simply open a file [[file+emacs:///tmp/something.gpg][/tmp/something.gpg]] type and save. You will be prompted to
  mark the keys you wish to encrypt for.
  
** Inline code execution

Execute code blocks (shell, python, [[https://github.com/nickanderson/ob-cfengine3][CFEngine 3]]) directly inline

[[file:data/screencasts/NT-how-i-org-exececute-inline-code.webm][DEMO]]

*** Shell

#+BEGIN_EXAMPLE
#+Caption: Executing a shell block
#+BEGIN_SRC shell :exports both :results output :var msg="Hello world"
  echo $msg
  date
#+END_SRC
#+END_EXAMPLE

#+Caption: Executing a shell block
#+Name: SHELLEXAMPLE
#+BEGIN_SRC shell :exports both :results output :var msg="Hello world"
  echo $msg
  date
#+END_SRC

#+Caption: Results from executing a shell block
#+RESULTS:
: Hello world
: Thu Mar  1 19:21:05 CST 2018

#+BEGIN_NOTES
  - You can paramaterize the blocks
#+END_NOTES
*** Python

#+BEGIN_EXAMPLE
#+Caption: Executing a python block
#+BEGIN_SRC python :exports both :results output
  print("Hello World")
#+END_SRC
#+END_EXAMPLE

#+Caption: Executing a python block
#+BEGIN_SRC python :exports both :results output
  print("Hello Everybody")
#+END_SRC

#+Caption: Results from executing a python block
#+RESULTS:
: Hello Everybody

*** CFEngine 3

#+BEGIN_EXAMPLE
#+Caption: Executing a CFEngine 3 policy block
#+BEGIN_SRC cfengine3 :exports both :include-stdlib no
  bundle agent main
  {
    reports: "Hello World";
  }
#+END_SRC
#+END_EXAMPLE

#+Caption: Executing a CFEngine 3 policy block
#+BEGIN_SRC cfengine3 :exports both :include-stdlib no
  bundle agent main
  {
    reports: "Hello World $(sys.date)";
  }
#+END_SRC

#+Caption: Results from executing a CFEngine 3 policy block
#+RESULTS:
: R: Hello World Wed Feb 28 11:59:25 2018

*** Reusable code blocks

#+BEGIN_EXAMPLE
  #+CALL: SHELLEXAMPLE(msg="Remeber the shell block from before?")
#+END_EXAMPLE

#+CALL: SHELLEXAMPLE(msg="Remeber the shell block from before?")

#+RESULTS:
: Remeber the shell block from before?
: Thu Mar  1 19:24:06 CST 2018

*** Remote execution

#+BEGIN_EXAMPLE
#+Caption: Execute commands on a remote host
#+BEGIN_SRC sh :dir /ssh:cmdln@direct.cmdln.org: :results output
  hostname
  uname -a 
#+END_SRC
#+END_EXAMPLE

#+Caption: Execute commands on a remote host
#+BEGIN_SRC sh :dir /ssh:cmdln@direct.cmdln.org: :results output
  hostname
  uname -a 
#+END_SRC

#+Caption: Results from executing commands on a remote host
#+RESULTS:
: ginger.pilgrimpage.com
: Linux ginger.pilgrimpage.com 2.6.18-308.24.1.el5xen #1 SMP Tue Dec 4 18:33:26 EST 2012 x86_64 x86_64 x86_64 GNU/Linux

** Sharing is caring 

[[file:data/screencasts/NT-how-i-export.webm][DEMO]]

- =ox-jira= :: Jira
- =ox-ascii= :: Ascii
- =ox-md= :: Markdown
- =ox-odt= :: Open Document
- =ox-latex= :: LaTeX and PDF
- =org-export-dispatch= :: Choose your export format
- =ox-publish= :: Export many files at once

** Magical Magit

[[file:data/screencasts/NT-how-i-magit.webm][DEMO]]

- ~magit-status~

#+BEGIN_NOTES
  - Branching
  - Fetching/Pulling
  - Commiting
  - Rebasing
  - Pushing
  - Pull Requests
#+END_NOTES

** Remember all the things
- =deft= is like Evernote or Google Keep
- =org-journal=
- Automatic cross reference with =org-capture= templates
 
** Communicating
*** Email

[[file:data/screencasts/NT-how-i-org-email.webm][DEMO]]

- offline mail
  - sending (local postfix server)
  - local mail cache
- fast searching
- org-mode integration

*** Presentations
- =org-present=
  - Present from inside org-mode (each slide is a top level heading)
- =org-beamer=
  - Export slide deck
- =org-reveal=
  - Export beautiful reveal.js deck
*** Chat

[[file:data/screencasts/NT-how-i-org-chat.webm][DEMO]]

- IRC
- Slack

Currently using both via weechat.
** On the go with Android
- mobile-org
- [[http://www.orgzly.com/][Orgzly]]
  - Native Dropbox support
  - I use Synthing instead
  - I only write to ONE file from mobile

** Jira

[[file:data/screencasts/NT-how-i-org-jira.webm][DEMO]]

#+ATTR_REVEAL: :frag (appear) 
- ~org-jira-get-issue~
- ~org-jira-create-issue~
- ~org-jira-todo-to-jira~
- ~org-jira-browse-issue~
- ~org-jira-update-comment~

** Terminals

[[file:data/screencasts/NT-how-i-terminal.webm][DEMO]]

- ~eshell~
- ~term~
- ~vagrant-tramp-term~

** Who needs excel

 Sum the second column ignoring header
 
|-----------+--------------------|
| Hostname  | Allocated Licenses |
|-----------+--------------------|
| prodcfg12 |                 65 |
| techcfg12 |                 35 |
| intgcfg12 |                120 |
| uatcfg12  |                 40 |
|-----------+--------------------|
| Total:    |                260 |
|-----------+--------------------|
#+TBLFM: @>$2=vsum(@2..@-1)

#+BEGIN_EXAMPLE
#+TBLFM: @>$2=vsum(@2..@-1)
#+END_EXAMPLE
 
** Did I mention literate programming?

- ~org-tangle-file~

#+BEGIN_SRC cfengine3 :tangle tangled.cf
  bundle agent main
  {
      reports:
        "CFEngine, org-mode, emacs with vimkeybindings";
        "Oh MY!";
  }
#+END_SRC

* Additional References

Some good resources to explore.

*** Literate DevOps

- http://www.howardism.org/Technical/Emacs/literate-devops.html
- http://www.howardism.org/Technical/Emacs/literate-devops-examples.html
- https://www.youtube.com/watch?v=dljNabciEGg

*** Org-mode Workshop

- https://github.com/nickanderson/org-mode-workshop

*** Level up your notes with org-mode

- https://github.com/nickanderson/Level-up-your-notes-with-Org 
